services:
  consul:
    image: hashicorp/consul:latest
    container_name: consul-server
    volumes:
      - consul_data:/consul/data  # Wolumen dla danych trwałych Consul
    ports:
      - "8500:8500"
    command: >
      consul agent -server -bootstrap -ui -client=0.0.0.0
      -data-dir=/consul/data
    networks:
      - app-network

  main_app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      - consul
    environment:
      - CONSUL_SERVER=http://consul-server:8500

  registration_service:
    # image: registration_service-registration_service
    build: 
      context: ../services/registration_service  # Wskazanie katalogu nadrzędnego w stosunku do katalogu z docker-compose.yml
      dockerfile: Dockerfile      # Nazwa Dockerfile, domyślnie "Dockerfile"

    ports:
      - "5001:5001"
    networks:
      - app-network
    depends_on:
      - consul
    environment:
      - CONSUL_SERVER=http://consul-server:8500

  product_service:
    # image: product_service-product_service
    build: 
      context: ../services/product_service  # Wskazanie katalogu nadrzędnego w stosunku do katalogu z docker-compose.yml
      dockerfile: Dockerfile      # Nazwa Dockerfile, domyślnie "Dockerfile"

    ports:
      - "5002:5002"
    networks:
      - app-network
    depends_on:
      - consul
    environment:
      - CONSUL_SERVER=http://consul-server:8500

  orders_servicet:
    # image: orders_service-orders_service
    build: 
      context: ../services/orders_service  # Wskazanie katalogu nadrzędnego w stosunku do katalogu z docker-compose.yml
      dockerfile: Dockerfile      # Nazwa Dockerfile, domyślnie "Dockerfile"]

    ports:
      - "5003:5003"
    networks:
      - app-network
    depends_on:
      - consul
    environment:
      - CONSUL_SERVER=http://consul-server:8500

volumes:
  consul_data:

networks:
  app-network:
    driver: bridge